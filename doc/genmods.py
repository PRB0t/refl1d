from __future__ import with_statement
import os.path

MODULE_TEMPLATE=""".. Autogenerated by genmods.py

******************************************************************************
%(name)s
******************************************************************************

:mod:`%(package)s.%(module)s`
==============================================================================

.. automodule:: %(package)s.%(module)s
   :members:
   :undoc-members:
   :inherited-members:
   :show-inheritance:

"""

INDEX_TEMPLATE=""".. Autogenerated by genmods.py

.. _api-index:

##############################################################################
   %(package_name)s
##############################################################################

.. only:: html

   :Release: |version|
   :Date: |today|

.. toctree::

   %(rsts)s
"""


def genfiles(package, package_name, modules, dir='api'):

    if not os.path.exists(dir):
        os.makedirs(dir)

    for module,name in modules:
        with open(os.path.join(dir,module+'.rst'), 'w') as f:
            f.write(MODULE_TEMPLATE%locals())

    rsts = "\n   ".join(module+'.rst' for module,name in modules)
    with open(os.path.join(dir,'index.rst'),'w') as f:
        f.write(INDEX_TEMPLATE%locals())


modules=[
#    ('__init__', 'Top level namespace'),
    ('material', 'Material'),
    ('model', 'Reflectivity Models'),
    ('reflectivity', 'Reflectivity'),
    ('probe', 'Instrument Probe'),
    ('profile', 'Model Profile'),
    ('interface', 'Interface'),
    ('instrument', 'Instrument'),
    ('experiment', 'Experiment'),
    ('materialdb', 'Materials Database'),
    ('polymer', 'Polymer'),
    ('cheby', 'Cheby'),
    ('freeform', 'Freeform Model'),
    ('magnetic', 'Magnetic Models'),
    ('ncnrdata', 'NCNR Data'),
    ('snsdata', 'SNS Data'),
    ('staj', 'Staj File'),
    ('stajconvert', 'Staj File Converter'),

]
package='refl1d'
package_name='Reference'
genfiles(package, package_name, modules)
