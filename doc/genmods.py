from __future__ import with_statement
import os.path

MODULE_TEMPLATE=""".. Autogenerated by genmods.py -- DO NOT EDIT --

******************************************************************************
%(package)s.%(module)s
******************************************************************************
 
.. automodule:: %(package)s.%(module)s
   :members:
   :undoc-members:
   :inherited-members:
   :show-inheritance:

"""

INDEX_TEMPLATE=""".. Autogenerated by genmods.py -- DO NOT EDIT --

.. _api-index:

##############################################################################
Reference
##############################################################################

.. only:: html

   :Release: |version|
   :Date: |today|

Modules defined within Refl1D:

.. toctree::

   %(rsts)s
   
"""


def genfiles(package, modules, dir='api'):

    if not os.path.exists(dir):
        os.makedirs(dir)
    for module in modules:
        with open(os.path.join(dir,module+'.rst'), 'w') as f:
            f.write(MODULE_TEMPLATE%locals())
    rsts = "\n   ".join(module+'.rst' for module in modules)
    with open(os.path.join(dir,'index.rst'),'w') as f:
        f.write(INDEX_TEMPLATE%locals())


modules=[
#    ('__init__', 'Top level namespace'),
    ('instrument', 'Instrument'),
    ('resolution', 'Resolution'),
    ('material', 'Material'),
    ('materialdb', 'Materials Database'),
    ('model', 'Reflectivity Models'),
    ('reflectivity', 'Reflectivity'),
    ('profile', 'Model Profile'),
    #('interface', 'Interface'),
    ('experiment', 'Experiment'),
    ('polymer', 'Polymer'),
    ('cheby', 'Freeform - Chebyshev'),
    ('mono', 'Freeform - Monotonic Spline'),
    ('freeform', 'Freeform - Parametric B-Spline'),
    #('magnetic', 'Magnetic Models'),
    ('ncnrdata', 'NCNR Data'),
    ('snsdata', 'SNS Data'),
    ('staj', 'Staj File'),
    ('stajconvert', 'Staj File Converter'),
    ('probe', 'Instrument Probe'),
    ('mystic.parameter', 'Parameters'),
    ('mystic.bounds', 'Bounds'),
    ('mystic.formatnum', 'Format numbers'),
]
package='refl1d'
genfiles(package, sorted(m for m,_ in modules))
